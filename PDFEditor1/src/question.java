
import com.sun.org.apache.xerces.internal.parsers.DOMParser;
import java.awt.Color;
import javax.swing.DefaultListModel;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpression;
import javax.xml.xpath.XPathFactory;
import org.w3c.dom.Attr;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * question.java
 *
 * Created on 1 Apr, 2012, 2:07:07 PM
 */

/**
 *
 * @author aditya
 */
public class question extends javax.swing.JFrame {

    /** Creates new form question */
    DOMParser parser;
    Document doc;
    XPath xpath;
    XPathExpression expr,expr1;
    NodeList nodes,nodes1,nodes2;
    Object result;
    DefaultListModel listmodel;
    String regno,sub,qn;
    Element element;
    Node node;
    String tick,cross,chk,circle,qmark,comment,hight,marks,fmarks;
    public question(String reg,String sb) {
        regno=reg;
        sub=sb;
        initComponents();
        init();
    }

    void init() {
        try {
        parser = new DOMParser();
        parser.parse("soxml.xml");
        doc = parser.getDocument();
        xpath = XPathFactory.newInstance().newXPath();
        listmodel = new DefaultListModel();
        }
        catch(Exception e) {
            System.out.println("parse: "+e.getMessage());

        }
        showques();
    }

    void showques() {
        try {
        expr = xpath.compile("//student[@regno='"+regno+"']/subject[@code='"+sub+"']/question/@ques_no");
        result = expr.evaluate(doc, XPathConstants.NODESET);
        nodes = (NodeList) result;
        for(int i=0;i<nodes.getLength();i++) {
                listmodel.addElement(nodes.item(i).getNodeValue());
            }
        jList1.setModel(listmodel);
        }
        catch(Exception e) {
            System.out.println("showques: "+e.getMessage());
        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jcheck = new javax.swing.JLabel();
        jmark = new javax.swing.JLabel();
        jtick = new javax.swing.JLabel();
        jques = new javax.swing.JLabel();
        jcross = new javax.swing.JLabel();
        jcircle = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jcomm = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jhigh = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel1.setText("Questions");

        jcheck.setText("Checked By:");

        jmark.setText("Marks :");

        jtick.setText("Ticks");

        jques.setText("Quesmarks");

        jcross.setText("Cross");

        jcircle.setText("Circles");

        jcomm.setColumns(20);
        jcomm.setRows(5);
        jScrollPane2.setViewportView(jcomm);

        jhigh.setColumns(20);
        jhigh.setRows(5);
        jScrollPane3.setViewportView(jhigh);

        jLabel2.setText("Comments");

        jLabel3.setText("Highlighted Text");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(97, 97, 97)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jmark)
                                    .addComponent(jcheck)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jtick, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jques, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(176, 176, 176)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jcircle)
                                            .addComponent(jcross)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(86, 86, 86)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))))
                        .addGap(159, 159, 159))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jcheck)
                .addGap(18, 18, 18)
                .addComponent(jmark)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jcross)
                        .addGap(18, 18, 18)
                        .addComponent(jcircle))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jtick)
                        .addGap(18, 18, 18)
                        .addComponent(jques)))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE))
                .addGap(51, 51, 51))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        if(evt.getClickCount()>=2) {
            disablelabel();
         qn = (String)jList1.getSelectedValue();
        if(qn!=null) {
            loaddetails(qn);
            System.out.println("ques: "+qn);
        }
        }
    }//GEN-LAST:event_jList1MouseClicked

    void loaddetails(String q) {
         try {
        /*nodes = doc.getDocumentElement().getChildNodes();
        System.out.println("ld:A");
        for(int i=0;i<nodes.getLength();i++)
            if(((Attr)(nodes.item(i).getAttributes().item(0))).getValue()==regno)
                node=nodes.item(i);
        nodes=node.getChildNodes();
        System.out.println("ld:C");
        for(int i=0;i<nodes.getLength();i++)
            if(nodes.item(i).getAttributes().item(0).getNodeValue()==sub)
                node=nodes.item(i);
        nodes=node.getChildNodes();
        for(int i=0;i<nodes.getLength();i++)
            if(nodes.item(i).getAttributes().item(0).getNodeValue()==q)
                node=nodes.item(i);
        nodes=node.getChildNodes();
        System.out.println("ld:B"); */
        expr = xpath.compile("//student[@regno='"+regno+"']/subject[@code='"+sub+"']/question[@ques_no='"+q+"']/tick/text()");
        tick = ((Node)expr.evaluate(doc, XPathConstants.NODE)).getNodeValue();
        expr = xpath.compile("//student[@regno='"+regno+"']/subject[@code='"+sub+"']/question[@ques_no='"+q+"']/cross/text()");
        cross = ((Node)expr.evaluate(doc, XPathConstants.NODE)).getNodeValue();
        expr = xpath.compile("//student[@regno='"+regno+"']/subject[@code='"+sub+"']/question[@ques_no='"+q+"']/ques_mark/text()");
        qmark = ((Node)expr.evaluate(doc, XPathConstants.NODE)).getNodeValue();
        expr = xpath.compile("//student[@regno='"+regno+"']/subject[@code='"+sub+"']/question[@ques_no='"+q+"']/circle/text()");
        circle = ((Node)expr.evaluate(doc, XPathConstants.NODE)).getNodeValue();
        expr = xpath.compile("//student[@regno='"+regno+"']/subject[@code='"+sub+"']/question[@ques_no='"+q+"']/high_text/text()");
        hight = ((Node)expr.evaluate(doc, XPathConstants.NODE)).getNodeValue();
        expr = xpath.compile("//student[@regno='"+regno+"']/subject[@code='"+sub+"']/question[@ques_no='"+q+"']/comment/text()");
        comment = ((Node)expr.evaluate(doc, XPathConstants.NODE)).getNodeValue();
        expr = xpath.compile("//student[@regno='"+regno+"']/subject[@code='"+sub+"']/question[@ques_no='"+q+"']/marks/text()");
        marks = ((Node)expr.evaluate(doc, XPathConstants.NODE)).getNodeValue();
        expr = xpath.compile("//student[@regno='"+regno+"']/subject[@code='"+sub+"']/question[@ques_no='"+q+"']/full_marks/text()");
        fmarks = ((Node)expr.evaluate(doc, XPathConstants.NODE)).getNodeValue();
        expr = xpath.compile("//student[@regno='"+regno+"']/subject[@code='"+sub+"']/question[@ques_no='"+q+"']/checked_by/text()");
        chk = ((Node)expr.evaluate(doc, XPathConstants.NODE)).getNodeValue();

        jcheck.setText("Checked By: "+chk);
        jtick.setText("Ticks: "+tick);
        jcircle.setText("Circles: "+circle);
        jcross.setText("Crosses: "+cross);
        jques.setText("Ques marks: "+qmark);
        jmark.setText("Marks: "+marks+"/"+fmarks);

        jcomm.setText("");
        jhigh.setText("");
        String[] tokens = comment.split("[|]+");
        for(int i=0;i<tokens.length;i++) {
            jcomm.append(tokens[i]);
            jcomm.append("\n");
            }
        tokens = hight.split("[|]+");
        for(int i=0;i<tokens.length;i++) {
            jhigh.append(tokens[i]);
            jhigh.append("\n");
            }
        }
        catch(Exception e) {
            System.out.println("showques: "+e.getMessage());
        }
    }
    void disablelabel() {

    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new question(null,null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel jcheck;
    private javax.swing.JLabel jcircle;
    private javax.swing.JTextArea jcomm;
    private javax.swing.JLabel jcross;
    private javax.swing.JTextArea jhigh;
    private javax.swing.JLabel jmark;
    private javax.swing.JLabel jques;
    private javax.swing.JLabel jtick;
    // End of variables declaration//GEN-END:variables

}
