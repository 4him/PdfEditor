/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * check.java
 *
 * Created on 24 Apr, 2012, 2:47:05 PM
 */
import com.sun.org.apache.xerces.internal.parsers.DOMParser;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.InputStreamReader;
import java.io.Writer;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpression;
import javax.xml.xpath.XPathFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
/**
 *
 * @author aditya
 */
public class check extends javax.swing.JFrame {

    /** Creates new form check */
    DOMParser parser;
    Document doc;
    XPath xpath;
    XPathExpression expr,exprm,exprfm,exprt,exprx,exprc,exprq;
    NodeList nodes,nodes1,nodes2;
    Object result;
    DefaultListModel listmodel;
    String regno,sub,qn;
    Element element;
    Node node;
    File file;
    File[] qf = new File[10];
    Writer[] wq = new Writer[10];
    Runtime runtime;
    FileInputStream fstream;
    DataInputStream in;
    BufferedReader br;
    public check(String reg) {
        regno=reg;
        initComponents();
        init();
    }

    void init() {
        try {
        parser = new DOMParser();
        parser.parse("soxml.xml");
        doc = parser.getDocument();
        xpath = XPathFactory.newInstance().newXPath();
        listmodel = new DefaultListModel();
        jLabel1.setText("");
        //jTable1.setVisible(false);
        }
        catch(Exception e) {
            System.out.println("parse: "+e.getMessage());

        }
        showsub();
    }
    void showsub() {
        try {
        expr = xpath.compile("//student[@regno='"+regno+"']/subject/@code");
            result = expr.evaluate(doc, XPathConstants.NODESET);
            nodes = (NodeList) result;
           System.out.println("ls:A");
            for(int i=0;i<nodes.getLength();i++) {
                listmodel.addElement(nodes.item(i).getNodeValue());
            }
           jList1.setModel(listmodel);
        }
        catch(Exception e){
            System.out.println("showsub: "+e.getMessage());
        }
        }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jButton1.setText("Show Details");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Reg. No", "Exptd", "Actual", "Full marks"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, 0, 0, Short.MAX_VALUE)))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jList1ValueChanged

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
        String sub;
        if(evt.getClickCount()>=2) {
         //jTable1.setVisible(false);
         jLabel1.setText("");
         sub = (String)jList1.getSelectedValue();
        if(sub!=null) {
            genfile(sub);
            System.out.println("ques: "+sub);
        }
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        try {
            //jTable1.setVisible(true);
            String st;
            String[] data={"Reg. No","Expected","Actual","Full marks"};
            int i=0;
            DefaultTableModel model = new DefaultTableModel(data, i);
            while((st=br.readLine())!=null) {
               data=st.split("[ ]+");
               model.insertRow(i,data);
               i++;
            }
            jTable1.setModel(model);
        }
        catch(Exception e) {
            System.out.println("show det:"+e.getMessage());
        }
    }//GEN-LAST:event_jButton1MouseClicked

    void genfile(String sub) {
        try {
            String reg;
            int t,q,fm,m,x,c;
            int fqn=0,nqn=0;
            boolean ftym=false;

            file= new File("qreg");
            Writer w = new BufferedWriter(new FileWriter(file));
            expr = xpath.compile("//student/@regno");
            result = expr.evaluate(doc, XPathConstants.NODESET);
            nodes = (NodeList) result;
            for(int i=0;i<nodes.getLength();i++) {
                reg=nodes.item(i).getNodeValue();
                w.write(reg+"\n");
                //System.out.println("gen: "+reg.trim());
                t=q=fm=m=x=c=0;
                exprm = xpath.compile("//student[@regno='"+reg+"']/subject[@code='"+sub+"']//marks/text()");
                result = exprm.evaluate(doc, XPathConstants.NODESET);
                nodes1 = (NodeList) result;
                // System.out.println(ftym+" "+nqn+" ");
                if(ftym==false) {
                        nqn=nodes1.getLength();
                        for(int g=0;g<nqn;g++) {
                            qf[g] = new File("qf"+g);
                            wq[g] = new BufferedWriter(new FileWriter(qf[g]));
                            //wq[g].write("aditya");
                        }
                       ftym=true;
                }
              // System.out.println("A");
                for(int j=0;j<nodes1.getLength();j++) {
                    wq[j].write(nodes1.item(j).getNodeValue().trim()+" ");
                      //m=m+Integer.parseInt(nodes1.item(j).getNodeValue().trim());
                  }
               // System.out.println("b");
                exprm = xpath.compile("//student[@regno='"+reg+"']/subject[@code='"+sub+"']//full_marks/text()");
                result = exprm.evaluate(doc, XPathConstants.NODESET);
                nodes1 = (NodeList) result;
                for(int j=0;j<nodes1.getLength();j++) {
                    wq[j].write(nodes1.item(j).getNodeValue().trim()+" ");
                      //fm=fm+Integer.parseInt(nodes1.item(j).getNodeValue().trim());
                  }
               //  System.out.println("c");
                exprm = xpath.compile("//student[@regno='"+reg+"']/subject[@code='"+sub+"']//tick/text()");
                result = exprm.evaluate(doc, XPathConstants.NODESET);
                nodes1 = (NodeList) result;
                for(int j=0;j<nodes1.getLength();j++) {
                    wq[j].write(nodes1.item(j).getNodeValue().trim()+" ");
                     // t=t+Integer.parseInt(nodes1.item(j).getNodeValue().trim());
                  }
              //   System.out.println("d");
                exprm = xpath.compile("//student[@regno='"+reg+"']/subject[@code='"+sub+"']//cross/text()");
                result = exprm.evaluate(doc, XPathConstants.NODESET);
                nodes1 = (NodeList) result;
                for(int j=0;j<nodes1.getLength();j++) {
                    wq[j].write(nodes1.item(j).getNodeValue().trim()+" ");
                      //x=x+Integer.parseInt(nodes1.item(j).getNodeValue().trim());
                  }
              //   System.out.println("e");
                exprm = xpath.compile("//student[@regno='"+reg+"']/subject[@code='"+sub+"']//circle/text()");
                result = exprm.evaluate(doc, XPathConstants.NODESET);
                nodes1 = (NodeList) result;
                for(int j=0;j<nodes1.getLength();j++) {
                    wq[j].write(nodes1.item(j).getNodeValue().trim()+" ");
                     // c=c+Integer.parseInt(nodes1.item(j).getNodeValue().trim());
                  }
              //  System.out.println("f");
                exprm = xpath.compile("//student[@regno='"+reg+"']/subject[@code='"+sub+"']//ques_mark/text()");
                result = exprm.evaluate(doc, XPathConstants.NODESET);
                nodes1 = (NodeList) result;
                for(int j=0;j<nodes1.getLength();j++) {
                    wq[j].write(nodes1.item(j).getNodeValue().trim()+"\n");
                      //q=q+Integer.parseInt(nodes1.item(j).getNodeValue().trim());
                  }
                 //System.out.println("g");
                //tick cross circle quesm marks fullmarks
                //w.write(t+" "+x+" "+c+" "+q+" "+m+" "+fm+"\n");
            }
            for(int j=0;j<nqn;j++) wq[j].close();
            w.close();
            conchk(nqn);
        }
        catch(Exception e) {
            System.out.println("genfile:"+e.getMessage());
        }
    }

    void conchk(int n) {
        try {
            runtime= Runtime.getRuntime();
            runtime.exec("./con "+n);
            fstream = new FileInputStream("qresult");
            in = new DataInputStream(fstream);
            br = new BufferedReader(new InputStreamReader(in));
            String str;
            str=br.readLine();
            jLabel1.setText(str);
        }
        catch(Exception e) {
            System.out.println("conchk:"+e.getMessage());
        }
    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new check("20084038").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}
